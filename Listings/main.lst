C51 COMPILER V9.59.0.0   MAIN                                                              01/17/2021 14:56:29 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\MDK5anzhuangwenjianjia\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "lcd.h"
   2          #include "menu.h"
   3          #include <stdio.h>
   4          
   5          #define uint8_t unsigned char
   6          #define uint16_t unsigned int 
   7          
   8          extern struct date my_date;
   9          extern struct beep_time my_beep_time;
  10          
  11          sbit beep = P2^5;
  12          static uint16_t count_times = 0;
  13          static short int hour_beep_times = 5;
  14          
  15          void delay_ms(uint16_t time_ms);
  16          void Timer0Init(void);          //10毫秒@11.0592MHz
  17          void UartInit(void);
  18          void display_now_date(void);
  19          void change_now_date_time();
  20          void tm0_isr() interrupt 1 using 1
  21          {
  22   1              TL0 = 0x00;             //设置定时初值
  23   1              TH0 = 0xDC;             //设置定时初值
  24   1          if(count_times < 800){
  25   2              count_times ++;
  26   2          } else if(count_times == 800){
  27   2              count_times = 0;
  28   2              change_now_date_time();
  29   2              //led = !led;
  30   2          }
  31   1          if(my_beep_time.is_beeping == 0){
  32   2              if(my_beep_time.hour == my_date.hour && my_beep_time.minute == my_date.minute && my_date.second ==
             - 0 ){
  33   3                  //定时
  34   3                  my_beep_time.is_beeping = 1;
  35   3              } 
  36   2          }
  37   1          if(my_date.minute == 0 && my_date.second == 0){
  38   2              //整点报时
  39   2              my_beep_time.on_the_hour = 1;
  40   2          }
  41   1      }  
  42          void main()
  43          {
  44   1          beep = 1;
  45   1          key_init();
  46   1          lcd_init();
  47   1              //UartInit();
  48   1          Timer0Init();
  49   1              printf_str(1, 2, "Welcome!");
  50   1              delay(300);
  51   1          lcd_wcmd(0x01); //清除LCD的显示内容
  52   1              
  53   1              ET0 = 1; //enable timer1 interrupt
C51 COMPILER V9.59.0.0   MAIN                                                              01/17/2021 14:56:29 PAGE 2   

  54   1          EA = 1; //open global interrupt switch
  55   1      
  56   1              //printf_str(0, 2, "当前日期时间");
  57   1          while(1)
  58   1          {
  59   2              /* 检测是否跳到其他界面 */
  60   2              menu_list();
  61   2                      if(count_times == 0){
  62   3                  /* 如果日期时间有变就刷新显示， 显示效果更好 */
  63   3                              display_now_date();
  64   3                              if(my_beep_time.is_beeping == 0){
  65   4                                      /* 不响 */
  66   4                                      beep = 1;
  67   4                                      //printf_str(3, 2, "         ");
  68   4                              } else if(my_beep_time.is_beeping == 1){
  69   4                                      /* 响 */
  70   4                                      beep = 0;
  71   4                                      //printf_str(3, 2, "wake up!");
  72   4                              } 
  73   3                  /* 整点报时 */
  74   3                  
  75   3                  if(my_beep_time.on_the_hour == 1){
  76   4                      if(hour_beep_times%2 == 1){
  77   5                          beep = 1;
  78   5                      } else if(hour_beep_times%2 == 0){
  79   5                          beep = 0;
  80   5                      }
  81   4                      hour_beep_times --;
  82   4                      if(hour_beep_times == 0){
  83   5                          my_beep_time.on_the_hour = 0;
  84   5                      } 
  85   4                  }
  86   3                      }
  87   2          }
  88   1      }
  89          void Uart0Init(void)
  90          {
  91   1          TH1 = 0xFD;  //晶振11.0592mhz 波特率设为9600
  92   1          TL1 = TH1;
  93   1          TMOD |= 0x20; //定时器1方式2
  94   1          SCON = 0x50; //串口接收使能
  95   1          ES = 1;     //串口中断使能
  96   1          TR1 = 1; //定时器1使能
  97   1          TI = 1; //发送中断标记位，必须设置
  98   1      }
  99          void Timer0Init(void)           //10毫秒@11.0592MHz
 100          {
 101   1      //      AUXR &= 0xBF;           //定时器时钟12T模式
 102   1              TMOD &= 0xF0;           //设置定时器模式
 103   1              TL0 = 0x00;             //设置定时初值
 104   1              TH0 = 0xDC;             //设置定时初值
 105   1              TF0 = 0;                //清除TF1标志
 106   1              TR0 = 1;                //定时器1开始计时
 107   1      //      ET1 = 1;        //enable timer1 interrupt
 108   1      //    EA = 1;          //open global interrupt switch
 109   1      }
 110          void display_now_date(void){
 111   1              char str[10] =" ";
 112   1          printf_str(0, 0, "当前日期时间");
 113   1      
 114   1          sprintf(str, "%04d", my_date.year);
 115   1          printf_str(1, 0, str);
C51 COMPILER V9.59.0.0   MAIN                                                              01/17/2021 14:56:29 PAGE 3   

 116   1          printf_str(1, 2, "年");
 117   1          
 118   1          sprintf(str, "%02d", my_date.mounth);
 119   1          printf_str(1, 3, str);
 120   1          printf_str(1, 4, "月");
 121   1      
 122   1          sprintf(str, "%02d", my_date.day);
 123   1          printf_str(1, 5, str);
 124   1              printf_str(1, 6, "日");
 125   1      
 126   1          sprintf(str, "%02d", my_date.hour);
 127   1          printf_str(2, 1, str);
 128   1          printf_str(2, 2, "时");
 129   1          
 130   1          
 131   1          sprintf(str, "%02d", my_date.minute);
 132   1          printf_str(2, 3, str);
 133   1          printf_str(2, 4, "分");
 134   1      
 135   1          sprintf(str, "%02d", my_date.second);
 136   1          printf_str(2, 5, str);
 137   1          printf_str(2, 6, "秒");
 138   1          
 139   1      }
 140          void change_now_date_time(){
 141   1          if(my_date.second < 59){
 142   2              my_date.second ++;
 143   2          } else if(my_date.second == 59) {
 144   2              my_date.second = 0;
 145   2          }
 146   1          if(my_date.second == 0 && my_date.minute < 59){
 147   2              my_date.minute ++;
 148   2          } else if(my_date.second == 0 && my_date.minute == 59){
 149   2              my_date.minute = 0;
 150   2          }
 151   1          if(my_date.second == 0 && my_date.minute == 0 && my_date.hour < 23){
 152   2              my_date.hour ++;
 153   2          } else if(my_date.second == 0 && my_date.minute == 0 && my_date.hour == 23){
 154   2              my_date.hour = 0;
 155   2          }
 156   1          if(my_date.second == 0 && my_date.minute == 0 && my_date.hour == 0 && my_date.day < my_date.mounth_day
             -s){
 157   2              my_date.day ++;
 158   2          } else if(my_date.second == 0 && my_date.minute == 0 && my_date.hour == 0 && my_date.day == my_date.mo
             -unth_days){
 159   2              my_date.day = 1;
 160   2          }
 161   1          if(my_date.second == 0 && my_date.minute == 0 && my_date.hour == 0 && my_date.day == 1 && my_date.moun
             -th < 12){
 162   2              my_date.mounth ++;
 163   2          } else if(my_date.second == 0 && my_date.minute == 0 && my_date.hour == 0 && my_date.day == 1 && my_da
             -te.mounth == 12){
 164   2              my_date.mounth = 1;
 165   2          }
 166   1          if(my_date.second == 0 && my_date.minute == 0 && my_date.hour == 0 && my_date.day == 1 && my_date.moun
             -th == 1){
 167   2              my_date.year ++;
 168   2          }
 169   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.59.0.0   MAIN                                                              01/17/2021 14:56:29 PAGE 4   

   CODE SIZE        =    940    ----
   CONSTANT SIZE    =     60    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
